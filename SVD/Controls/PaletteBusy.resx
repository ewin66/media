<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="icon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhHgAeANcAAAAAAAAEBAAICAAIDAQIDAAMDAQMDAQMEAQQEAQQFAQUFAQUGAQYGAQYHAgYHAgc
        HAgcIAggIAggJAgkJAgkKAwkKAgoKAwoKAwoLAwsLAwsMAwwMAwwNAw0NAw0OBA0OBA4OBA4PBA8PBA8
        QBA8RBBARBBASBRASBBESBRESBRETBRITBRIUBRMUBRMVBRQVBRQWBhQWBRUWBhUWBhUXBhYXBhYYBhc
        YBhcZBxcZBhgZBhgaBxgZBxgaBxkaBxkbBxobBxocBxscBxsdCBsdBxwdBxweCBweCB0fCB4fCB4gCB4
        hCR4gCB8hCR8hCR8iCSAiCSAjCSEjCSEkCSIkCSIlCiIkCiIlCiMlCiMmCiQmCiQnCiUnCiUoCyUoCiY
        oCiYpCyYoCyYpCycpCycqCygqCygrCykrCyksDCksDCosDCotDCstDCsuDCwuDCwvDC0wDS0wDS4xDS4
        yDS8yDS8zDTAzDTA0DjA0DjE0DjE1DjI1DjI2DjM2DjM3DjQ3DzQ3DzQ4DzU4DzY5EDs+AAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACH/C05FVFNDQVBFMi4wAwEAAAAh+QQABQAAACwAAAAAHgAeAAAI/wABCBxIsKDBgwgHGighpIaDhBAJ
        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
        lGnm0EIInoZHEHoEIEDRpwQFAQQAOw==
</value>
  </data>
</root>