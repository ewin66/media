<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        FKsJCQkAAAAAAAAAAAAQEBYpKcgMClYAAAAAAAAAAAAAAAAJCQkICAgAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAADAwBWVo91dv5WVv9ERP89Pf0oKJ0KCgoAAAAAAAAAAAAAAAAAAAAeHkUXF8wD
        AxMAAAAAAAAAAAAJCQkICAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAUsLDhp
        aaRZWbEkJEoDAwUAAAAAAAAAAAAAAAAAAAAAAAADAwAfH6MTE2sAAAAAAAAAAAAJCQkICAgAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAXFzkXF70FBQcAAAAAAAAJCQkICAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwAqKr8KCV0AAAAAAAAJ
        CQkICAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeHl8dG8QCAAYAAAAJCQkQEBAHBwcICAgICAgICAgICAgICAgI
        CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgHBwYN
        DRYpKYoLCx4GBgUREREAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>